stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy


build-job:       # Job for building the Docker image
  image: docker:latest    # Use Docker image to run Docker commands
  services:
    - docker:dind         # Docker-in-Docker service to enable building images
  stage: build
  only:
    - main
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $CI_REGISTRY/kdg-ti/integratieproject-2/2024-2025/team12/front-end:latest .
    - docker push $CI_REGISTRY/kdg-ti/integratieproject-2/2024-2025/team12/front-end:latest


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 60
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
